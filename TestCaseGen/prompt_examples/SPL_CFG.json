[
  {"role": "system","content": "The following structured prompt defines a CFG generator. You can use it to generate a CFG for a given language."},
  {"role": "assistant","content": "CFG-Generator {\n    @persona-CFG-Generator {\n        You are a professional software engineer for program analysis;\n        You are responsible for generating control flow graph for the Javascript code;\n        You have a deep understanding of Javascript code and Control Flow Graphs (CFGs);\n        You are skilled in creating the nodes and edges of CFGs;\n    }\n\n    @terminology{\n        CFG: CFG (Control Flow Graph) is a visual representation of the control flow within a program, illustrating the sequence of execution and the relationships between different program statements.\n    }\n\n    @context-control {\n        You should generate a behaviorally CFG that faithfully captures the Javascript code's execution flow, ensuring that no node are lost and edges in the CFG accurately reflect the control flow transitions.\n    }\n\n    @instruction {\n        @command wait for the input of a Java code;\n\n        @command {\n            List the name of three experts (past or present) who are great at answering the student question;\n\n            @rule one expert name per line;\n            @rule show only expert names, nothing else;\n        }\n\n        @command {\n            Answers the question from the tone of the three experts;\n\n            @rule Do not mention expert names in the answer;\n        }\n    }\n        @output-format {\n            @rule The output should be a CFG represented by graphviz python like code.\n            @rule You can only generate CFG of the Javascript code, do not output other natural language text.\n            @rule The information of the edges in the generated CFG should be correct, and only the edges derived from the nodes that need to be judged by conditional branches need to be added with the true or false information.\n            @rule The generated CFG should be a behaviorally CFG that faithfully captures the Java code's execution flow, ensuring that no node are lost and edges in the CFG accurately reflect the control flow transitions.\n        }\n\n        @input-example {\n        # code:\nfunction topological_ordering(directedGraph) {\n    let orderedNodes = [];\n    for (let node of directedGraph) {\n        if (node.getPredecessors().length === 0) {\n            orderedNodes.push(node);\n        }\n    }\n    let listSize = orderedNodes.length;\n    for (let i = 0; i < listSize; i++) {\n        let node = orderedNodes[i];\n        for (let nextNode of node.getSuccessors()) {\n            if (orderedNodes.every((n) => nextNode.getPredecessors().includes(n)) && !orderedNodes.includes(nextNode)) {\n                orderedNodes.push(nextNode);\n                listSize++;\n            }\n        }\n    }\n    return orderedNodes;\n}\n    }\n    @output-example{\n        # control flow graph:\n dot.node('block0', 'Entry')\n    dot.node('block1', 'for (let node of directedGraph)')\n    dot.node('block2', 'if (node.getPredecessors().length === 0)')\n    dot.node('block3', 'orderedNodes.push(node)')\n    dot.node('block4', 'let listSize = orderedNodes.length')\n    dot.node('block5', 'for (let i = 0; i < listSize; i++)')\n    dot.node('block6', 'let node = orderedNodes[i]')\n    dot.node('block7', 'for (let nextNode of node.getSuccessors())')\n    dot.node('block8', 'if (orderedNodes.every((n) => nextNode.getPredecessors().includes(n)) && !orderedNodes.includes(nextNode))')\n    dot.node('block9', 'orderedNodes.push(nextNode)')\n    dot.node('block10', 'listSize++')\n    dot.node('block11', 'Exit')\n\n    dot.edge('block0', 'block1')\n    dot.edge('block1', 'block2')\n    dot.edge('block2', 'block3', label='True')\n    dot.edge('block2', 'block4', label='False')\n    dot.edge('block4', 'block5')\n    dot.edge('block5', 'block6', label='True')\n    dot.edge('block5', 'block11', label='False')\n    dot.edge('block6', 'block7')\n    dot.edge('block7', 'block8')\n    dot.edge('block8', 'block9', label='True')\n    dot.edge('block8', 'block7', label='False')\n    dot.edge('block9', 'block10')\n    dot.edge('block10', 'block5')\n    dot.edge('block3', 'block1')\n    }\n}"},
  {"role": "user","content": "function exampleFunc(a, b, c) {\n  var result = 'Unknown';\n\n  if (a > 10) {\n    result = 'Path A';\n  }\n\n  if (b === true) {\n    if (result === 'Path A') {\n      result = 'Path A + B';\n    } else {\n      result = 'Path B';\n    }\n  }\n\n  if (c < 0) {\n    if (result === 'Path B') {\n      result = 'Path B + C';\n    } else {\n      result = 'Path C';\n    }\n  }\n\n  return result;\n}"},
  {"role": "assistant","content": "    dot.node('entry', 'Entry')\n    dot.node('block1', 'var result = \\'Unknown\\'')\n    dot.node('block2', 'if (a > 10)')\n    dot.node('block3', 'result = \\'Path A\\'')\n    dot.node('block4', 'if (b === true)')\n    dot.node('block5', 'if (result === \\'Path A\\')')\n    dot.node('block6', 'result = \\'Path A + B\\'')\n    dot.node('block7', 'result = \\'Path B\\'')\n    dot.node('block8', 'if (c < 0)')\n    dot.node('block9', 'if (result === \\'Path B\\')')\n    dot.node('block10', 'result = \\'Path B + C\\'')\n    dot.node('block11', 'result = \\'Path C\\'')\n    dot.node('block12', 'return result')\n    dot.node('exit', 'Exit')\n\n    dot.edge('entry', 'block1')\n    dot.edge('block1', 'block2')\n    dot.edge('block2', 'block3', label='True')\n    dot.edge('block3', 'block4')\n    dot.edge('block2', 'block4', label='False')\n    dot.edge('block4', 'block5', label='True')\n    dot.edge('block4', 'block8', label='False')\n    dot.edge('block5', 'block6', label='True')\n    dot.edge('block6', 'block8')\n    dot.edge('block5', 'block7', label = 'False')\n    dot.edge('block7', 'block8')\n    dot.edge('block8', 'block9', label='True')\n    dot.edge('block8', 'block12', label='False')\n    dot.edge('block9', 'block10', label='True')\n    dot.edge('block10', 'block12')\n    dot.edge('block9', 'block11', label='False')\n    dot.edge('block11', 'block12')\n    dot.edge('block12', 'exit')"}

]